---
- name: make offline mode devpi-server for PyPi
  hosts: devpi-server
  connection: docker
  gather_facts: no
  tasks:
  - name: add --offline-mode option to devpi-server
    lineinfile:
      regexp: "^command="
      line: "command=/usr/local/bin/devpi-server --configfile /var/lib/devpi-server/config.yml --offline-mode"
      dest: /var/lib/devpi-server/gen-config/supervisor-devpi.conf
    notify: 'devpi-server config changed'
  handlers:
  - name: Restart services
    community.general.supervisorctl:
      name: devpi-server
      state: restarted
      config: /var/lib/devpi-server/gen-config/supervisord.conf
    listen: 'devpi-server config changed'
- name: make offline mode proxy for dockerhub
  hosts: registry
  connection: docker
  gather_facts: no
  tasks:
  - name: install python
    raw: apk update && apk add python3 py3-pip
    changed_when: False
  - name: remove proxy setting of registry
    template:
      src: registry/config-offline.yml
      dest: /etc/docker/registry/config.yml
    notify: 'registry config changed'
  handlers:
  - name: Restart services
    community.docker.docker_compose:
      project_src: .
      services:
      - registry
      build: false
      restarted: true
    delegate_to: localhost
    listen: 'registry config changed'
- name: make squid support offline
  hosts: squid
  connection: docker
  gather_facts: no
  tasks:
  - name: install python
    raw: apt-get update ; apt-get -y install python3
    changed_when: False
  - name: gather hosts which uses TLS from access log
    shell: "sed -n -e 's/^.*CONNECT \\([^:]*\\):.*$/\\1/p' /var/log/squid/access.log | sort | uniq"
    changed_when: false
    check_mode: false
    register: tls_hosts
  - name: get ip address of nginx
    shell: "echo $(getent hosts nginx | cut -d ' ' -f 1)"
    changed_when: false
    check_mode: false
    register: nginx_addr
  - name: add entry TLS hosts into hosts file for squid
    lineinfile:
      insertafter: EOF
      line: "{{ nginx_addr.stdout_lines | first }} {{ tls_hosts.stdout_lines | join(' ') }}"
      dest: /etc/squid/hosts
    notify: 'config changed'
  - name: set sslproxy_cert_error directive in squid.conf
    lineinfile:
      dest: /etc/squid/squid.conf
      regexp: '^#? *sslproxy_cert_error.*'
      line: 'sslproxy_cert_error allow all' 
    notify: 'config changed'
  - name: set sslproxy_cert_adapt directive in squid.conf
    lineinfile:
      dest: /etc/squid/squid.conf
      regexp: '^#? *sslproxy_cert_adapt.*'
      line: 'sslproxy_cert_adapt setCommonName all' 
    notify: 'config changed'
  - name: set tls_outgoing_options directive in squid.conf
    lineinfile:
      dest: /etc/squid/squid.conf
      regexp: '^#? *tls_outgoing_options.*'
      line: 'tls_outgoing_options flags=DONT_VERIFY_PEER,DONT_VERIFY_DOMAIN' 
    notify: 'config changed'
  - name: gather URLs which return redirect from access log
    shell: "sed -n -e 's/^.*GET \\([^\\?]*\\) HTTP\\/1\\.1. 30[0-9].*$/\\1/p' /var/log/squid/access.log | sort | uniq"
    changed_when: false
    check_mode: false
    register: redirect_urls
  - name: gather file paths
    shell: "sed -n -e 's/^.*GET https:\\/\\/[^\\/]*\\(\\/[^\\?]*\\) HTTP\\/1\\.1. 30[0-9].*$/\\1/p' /var/log/squid/access.log | sort | uniq"
    changed_when: false
    check_mode: false
    register: file_paths
  handlers:
  - name: send HUP signal to recconfigure
    shell: kill -HUP 1
    listen: 'config changed'
- name: Download files to nginx via redirect
  hosts: nginx
  connection: docker
  gather_facts: no
  tasks:
  - name: install python
    raw: apt-get update ; apt-get -y install python3
    changed_when: False
  - name: insert location directive
    blockinfile:
      path: "/etc/nginx/conf.d/default.conf"
      insertafter: "ssl_certificate_key /etc/ssl/private/domain.key;"
      block: |
        {% set filename = item.split('/')[-1] %}
        location {{ item }} {
          alias /usr/share/nginx/html/downloads/{{ filename }};
        }
      marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ item }}"
    loop: "{{ hostvars['squid'].file_paths.stdout_lines }}"
    notify: 'nginx config changed'
  - name: create downloads directory
    file:
      path: /usr/share/nginx/html/downloads
      state: directory
      mode: "755"
  - name: gather files through redirect
    get_url:
      url: "{{ item }}"
      dest: /usr/share/nginx/html/downloads/
      mode: '644'
    loop: "{{ hostvars['squid'].redirect_urls.stdout_lines }}"
    ignore_errors: yes
  handlers:
  - name: send HUP signal to recconfigure
    shell: kill -HUP 1
    listen: 'nginx config changed'