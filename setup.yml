---
- name: set-up mirror proxy for dockerhub
  hosts: registry
  connection: docker
  gather_facts: no
  tasks:
  - name: install python
    raw: apk update && apk add python3 py3-pip
    changed_when: False
  - name: Add a user to a password file and ensure permissions are set
    template:
      src: registry/config.yml
      dest: /etc/docker/registry/config.yml
    notify: 'registry config changed'
  handlers:
  - name: Restart services
    community.docker.docker_compose:
      project_src: .
      services:
      - registry
      build: false
      restarted: true
    delegate_to: localhost
    listen: 'registry config changed'
- name: make squid forward requests to regstry/devpi-server
  hosts: squid
  connection: docker
  gather_facts: no
  tasks:
  - name: install python
    raw: apt-get update ; apt-get -y install python3
    changed_when: False
  - name: get ip address of registry
    shell: "echo $(getent hosts registry | cut -d ' ' -f 1)"
    changed_when: false
    check_mode: false
    register: registry_addr
  - name: get ip address of devpi-server
    shell: "echo $(getent hosts devpi-server | cut -d ' ' -f 1)"
    changed_when: false
    check_mode: false
    register: devpi_server_addr
  - name: register registry and devpi server hosts file
    copy:
      content: |
        {{ registry_addr.stdout_lines | first }} registry-mirror.offline-cache
        {{ devpi_server_addr.stdout_lines | first }} devpi-server.offline-cache
      dest: /etc/squid/hosts
    notify: 'config changed'
  - name: set hosts_file directive in squid.conf
    lineinfile:
      dest: /etc/squid/squid.conf
      regexp: '^#? *hosts_file.*'
      line: 'hosts_file /etc/squid/hosts' 
    notify: 'config changed'
  - name: create client cert directory
    file:
      path: /etc/squid/client_cert
      state: directory
      mode: "644"
  - name: put client cert and key
    blockinfile:
      path: "/etc/squid/client_cert/{{ item.name }}"
      block: "{{ item.content }}"
      create: true
      marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ item.name }}"
    loop:
      - { name: client.crt, content: "{{ nssdc_client_cert }}" }
      - { name: client.key, content: "{{ nssdc_client_key }}" }
  - name: set client cert to squid
    blockinfile:
      path: /etc/squid/squid.conf
      insertafter: "# tls_outgoing_options flags=DONT_VERIFY_PEER,DONT_VERIFY_DOMAIN"
      block: |
        tls_outgoing_options cert=/etc/squid/client_cert/client.crt key=/etc/squid/client_cert/client.key
    notify: 'config changed'
  handlers:
  - name: send HUP signal to recconfigure
    shell: kill -HUP 1
    listen: 'config changed'
